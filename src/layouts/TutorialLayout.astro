---
import BaseLayout from './BaseLayout.astro';
import TutorialSidebar from '../components/TutorialSidebar.svelte';

export interface Props {
	title: string;
	description?: string;
	section?: string;
	totalSteps?: number;
	currentStep?: number;
	allTutorials?: any[];
	currentSlug?: string;
}

const {
	title,
	description,
	section = 'Tutorial',
	totalSteps,
	currentStep,
	allTutorials = [],
	currentSlug = ''
} = Astro.props;
---

<BaseLayout title={`${title} | dstack Tutorial`} description={description}>
	<div class="flex min-h-screen">
		<!-- Sidebar Navigation -->
		<aside class="hidden lg:block w-64 bg-bg-deep border-r border-border-default fixed h-full overflow-y-auto">
			<div class="p-6">
				<a href="/" class="flex items-center space-x-2 mb-8">
					<span class="text-2xl font-bold">
						<span class="text-lime-green">d</span><span class="text-cyber-blue">stack</span>
					</span>
				</a>

				<!-- Dynamic Navigation -->
				{allTutorials.length > 0 && (
					<TutorialSidebar
						client:load
						tutorials={allTutorials}
						currentSlug={currentSlug}
					/>
				)}
			</div>
		</aside>

		<!-- Main Content -->
		<main class="flex-1 lg:ml-64">
			<!-- Breadcrumb Navigation (placeholder for Phase 0.4.3) -->
			<div class="bg-bg-deep border-b border-border-default px-6 py-4">
				<nav class="flex items-center space-x-2 text-sm">
					<a href="/" class="text-cyber-blue hover:underline">Home</a>
					<span class="text-text-secondary">/</span>
					<a href="/tutorial" class="text-cyber-blue hover:underline">Tutorial</a>
					<span class="text-text-secondary">/</span>
					<span class="text-text-secondary">{section}</span>
				</nav>
			</div>

			<!-- Tutorial Content -->
			<div class="max-w-4xl mx-auto px-6 py-12">
				<!-- Tutorial Header -->
				<header class="mb-8">
					<h1 class="text-4xl font-bold mb-4 text-text-primary">{title}</h1>
					{description && (
						<p class="text-lg text-text-secondary">{description}</p>
					)}
				</header>

				<!-- Progress Indicator (if provided) -->
				{totalSteps && currentStep && (
					<div class="mb-8">
						<div class="flex items-center justify-between mb-2">
							<span class="text-sm text-text-secondary">
								Step {currentStep} of {totalSteps}
							</span>
							<span class="text-sm text-text-secondary">
								{Math.round((currentStep / totalSteps) * 100)}% Complete
							</span>
						</div>
						<div class="w-full bg-bg-deep rounded-full h-2">
							<div
								class="h-2 rounded-full transition-all duration-300"
								class:list={[
									Math.round((currentStep / totalSteps) * 100) === 100 ? 'bg-lime-green' :
									Math.round((currentStep / totalSteps) * 100) >= 50 ? 'bg-cyber-blue' :
									'bg-cyber-purple'
								]}
								style={`width: ${Math.round((currentStep / totalSteps) * 100)}%`}
							></div>
						</div>
					</div>
				)}

				<!-- Tutorial Content Slot -->
				<article class="tutorial-content">
					<slot />
				</article>
			</div>
		</main>
	</div>
</BaseLayout>
